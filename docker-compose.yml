version: '3'
services:
  web:
    image: web:local
    build:
      context: ./backend
      dockerfile: Dockerfile
    hostname: web
    command: flask run --host=0.0.0.0 --port 8000
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis

  # Postgres
  db:
    image: postgres:15-alpine3.18
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5433:5432"

  # Redis
  redis:
      image: redis:7-alpine3.18
      hostname: redis

  # React app
  app:
    image: app:local
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - ./client:/app/
      - /app/node_modules
    ports:
      - "3000:3000"

  worker:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    command: celery --app casestudy.tasks.celery worker --loglevel=info --logfile=casestudy/logs/celery.log
    volumes:
      - ./backend:/app
    environment:
       - FLASK_DEBUG=1
       - APP_SETTINGS=casestudy.config.DevelopmentConfig
       - CELERY_BROKER_URL=redis://redis:6379/0
       - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - web
      - redis

  dashboard:
     build: 
      context: ./backend
      dockerfile: Dockerfile
     command: celery --app casestudy.tasks.celery flower --port=5555 --broker=redis://redis:6379/0
     ports:
      - 5556:5555
     environment:
      - FLASK_DEBUG=1
      - APP_SETTINGS=casestudy.config.DevelopmentConfig
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
     depends_on:
      - web
      - redis
      - worker

volumes:
    postgres_data:

